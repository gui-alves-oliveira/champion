/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TournamentsIndexRouteImport } from './routes/tournaments/index'
import { Route as TournamentsCreateRouteImport } from './routes/tournaments/create'
import { Route as TournamentsSlugRouteImport } from './routes/tournaments/$slug'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TournamentsIndexRoute = TournamentsIndexRouteImport.update({
  id: '/tournaments/',
  path: '/tournaments/',
  getParentRoute: () => rootRouteImport,
} as any)
const TournamentsCreateRoute = TournamentsCreateRouteImport.update({
  id: '/tournaments/create',
  path: '/tournaments/create',
  getParentRoute: () => rootRouteImport,
} as any)
const TournamentsSlugRoute = TournamentsSlugRouteImport.update({
  id: '/tournaments/$slug',
  path: '/tournaments/$slug',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/tournaments/$slug': typeof TournamentsSlugRoute
  '/tournaments/create': typeof TournamentsCreateRoute
  '/tournaments': typeof TournamentsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/tournaments/$slug': typeof TournamentsSlugRoute
  '/tournaments/create': typeof TournamentsCreateRoute
  '/tournaments': typeof TournamentsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/tournaments/$slug': typeof TournamentsSlugRoute
  '/tournaments/create': typeof TournamentsCreateRoute
  '/tournaments/': typeof TournamentsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/tournaments/$slug' | '/tournaments/create' | '/tournaments'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/tournaments/$slug' | '/tournaments/create' | '/tournaments'
  id:
    | '__root__'
    | '/'
    | '/tournaments/$slug'
    | '/tournaments/create'
    | '/tournaments/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TournamentsSlugRoute: typeof TournamentsSlugRoute
  TournamentsCreateRoute: typeof TournamentsCreateRoute
  TournamentsIndexRoute: typeof TournamentsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tournaments/': {
      id: '/tournaments/'
      path: '/tournaments'
      fullPath: '/tournaments'
      preLoaderRoute: typeof TournamentsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tournaments/create': {
      id: '/tournaments/create'
      path: '/tournaments/create'
      fullPath: '/tournaments/create'
      preLoaderRoute: typeof TournamentsCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tournaments/$slug': {
      id: '/tournaments/$slug'
      path: '/tournaments/$slug'
      fullPath: '/tournaments/$slug'
      preLoaderRoute: typeof TournamentsSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TournamentsSlugRoute: TournamentsSlugRoute,
  TournamentsCreateRoute: TournamentsCreateRoute,
  TournamentsIndexRoute: TournamentsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
